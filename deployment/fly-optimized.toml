app = "e-academic"
primary_region = "iad"
kill_signal = "SIGINT"
kill_timeout = "5s"

[experimental]
  auto_rollback = true

[build]
  builder = "heroku/buildpacks:20"
  buildpacks = ["heroku/nodejs"]

[env]
  NODE_ENV = "production"
  PORT = "8080"
  NODE_OPTIONS = "--max-old-space-size=1024"

[http_service]
  internal_port = 8080
  force_https = true
  auto_stop_machines = true
  auto_start_machines = true
  min_machines_running = 1
  max_machines_running = 3
  processes = ["app"]

[[http_service.checks]]
  grace_period = "10s"
  interval = "30s"
  method = "GET"
  timeout = "5s"
  path = "/api/health"
  protocol = "http"
  tls_skip_verify = false

[processes]
  app = "npm start"

[[statics]]
  guest_path = "/app/dist/public"
  url_prefix = "/assets/"

[[vm]]
  cpu_kind = "shared"
  cpus = 1
  memory_mb = 512

[[mounts]]
  source = "e_academic_data"
  destination = "/app/uploads"

[metrics]
  port = 9091
  path = "/metrics"

[deploy]
  release_command = "npm run db:push"
  strategy = "bluegreen"

[[services]]
  internal_port = 8080
  protocol = "tcp"

  [[services.ports]]
    handlers = ["http"]
    port = "80"
    force_https = true

  [[services.ports]]
    handlers = ["tls", "http"]
    port = "443"

  [[services.tcp_checks]]
    interval = "15s"
    timeout = "2s"
    grace_period = "5s"

  [[services.http_checks]]
    interval = "10s"
    timeout = "2s"
    grace_period = "5s"
    method = "get"
    path = "/api/health"
    protocol = "http"
    tls_skip_verify = false

[console]
  command = "/bin/bash"