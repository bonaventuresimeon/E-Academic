services:
  - type: web
    name: academic-management-platform
    env: node
    plan: free
    region: oregon
    buildCommand: npm install --legacy-peer-deps && npm run build
    startCommand: npm start
    healthCheckPath: /api/health
    autoDeploy: true
    envVars:
      - key: NODE_ENV
        value: production
      - key: SESSION_SECRET
        generateValue: true
      - key: DATABASE_URL
        fromDatabase:
          name: academic-db
          property: connectionString
      - key: NODE_OPTIONS
        value: "--max-old-space-size=2048"
      - key: PORT
        value: "10000"
    buildFilter:
      paths:
        - server/**
        - client/**
        - shared/**
        - package.json
        - package-lock.json
        - vite.config.ts
        - tsconfig.json
      ignoredPaths:
        - "**/*.md"
        - docs/**
        - "**/*.test.*"
    headers:
      - path: "/api/*"
        name: "X-Content-Type-Options"
        value: "nosniff"
      - path: "/api/*"
        name: "X-Frame-Options"
        value: "DENY"
      - path: "/*"
        name: "X-XSS-Protection"
        value: "1; mode=block"
    routes:
      - type: rewrite
        source: "/api/*"
        destination: "/api/*"
      - type: rewrite
        source: "/*"
        destination: "/index.html"

databases:
  - name: academic-db
    databaseName: academic_platform
    user: academic_user
    plan: free
    region: oregon
    version: "15"

  # Background job for database maintenance
  - type: cron
    name: db-maintenance
    schedule: "0 2 * * *"
    buildCommand: echo "Database maintenance job"
    startCommand: echo "Running maintenance..."