// Prisma schema file - Modern alternative to drizzle-kit
// This is your database schema definition file

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  role      String   @default("student")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  enrollments     Enrollment[]
  submissions     Submission[]
  lecturedCourses Course[]
  recommendations AiRecommendation[]
  syllabi        GeneratedSyllabus[]

  @@map("users")
}

model Course {
  id             Int    @id @default(autoincrement())
  title          String
  description    String
  department     String
  credits        Int
  maxEnrollment  Int
  lecturerId     Int
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relations
  lecturer    User         @relation(fields: [lecturerId], references: [id])
  enrollments Enrollment[]
  assignments Assignment[]

  @@map("courses")
}

model Enrollment {
  id       Int    @id @default(autoincrement())
  courseId Int
  studentId Int
  status   String @default("pending")
  createdAt DateTime @default(now())

  // Relations
  course  Course @relation(fields: [courseId], references: [id])
  student User   @relation(fields: [studentId], references: [id])

  @@unique([courseId, studentId])
  @@map("enrollments")
}

model Assignment {
  id          Int      @id @default(autoincrement())
  courseId    Int
  title       String
  description String
  dueDate     DateTime
  maxPoints   Int
  createdAt   DateTime @default(now())

  // Relations
  course      Course       @relation(fields: [courseId], references: [id])
  submissions Submission[]

  @@map("assignments")
}

model Submission {
  id               Int      @id @default(autoincrement())
  assignmentId     Int
  studentId        Int
  textSubmission   String?
  fileUrl          String?
  grade            Int?
  feedback         String?
  submittedAt      DateTime @default(now())

  // Relations
  assignment Assignment @relation(fields: [assignmentId], references: [id])
  student    User       @relation(fields: [studentId], references: [id])

  @@unique([assignmentId, studentId])
  @@map("submissions")
}

model AiRecommendation {
  id             Int      @id @default(autoincrement())
  userId         Int
  interests      String
  recommendations Json
  createdAt      DateTime @default(now())

  // Relations
  user User @relation(fields: [userId], references: [id])

  @@map("ai_recommendations")
}

model GeneratedSyllabus {
  id               Int      @id @default(autoincrement())
  userId           Int
  courseTitle      String
  courseDescription String
  duration         Int
  credits          Int
  syllabus         Json
  createdAt        DateTime @default(now())

  // Relations
  user User @relation(fields: [userId], references: [id])

  @@map("generated_syllabi")
}